#############################################################################
# Makefile for building: RiverModelGUI
# Generated by qmake (2.01a) (Qt 4.8.1) on: Sat Dec 8 03:38:37 2012
# Project:  RiverModelGUI.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile RiverModelGUI.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = view/mainwindow.cpp \
		view/configuration.cpp \
		view/modelthread.cpp \
		view/progressthread.cpp \
		main.cpp \
		model/rivermodel.cpp \
		model/status.cpp \
		model/globals.cpp \
		model/cleanup.cpp \
		model/color.cpp \
		model/dump.cpp \
		model/go.cpp \
		model/patch.cpp \
		model/pred.cpp \
		model/setup.cpp moc_mainwindow.cpp \
		moc_modelthread.cpp \
		moc_progressthread.cpp
OBJECTS       = mainwindow.o \
		configuration.o \
		modelthread.o \
		progressthread.o \
		main.o \
		rivermodel.o \
		status.o \
		globals.o \
		cleanup.o \
		color.o \
		dump.o \
		go.o \
		patch.o \
		pred.o \
		setup.o \
		moc_mainwindow.o \
		moc_modelthread.o \
		moc_progressthread.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		QmakeIncludes/SettingsOverrides.pri \
		QmakeIncludes/RiverModelCommon.pri \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		RiverModelGUI.pro
QMAKE_TARGET  = RiverModelGUI
DESTDIR       = 
TARGET        = RiverModelGUI

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: RiverModelGUI.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		QmakeIncludes/SettingsOverrides.pri \
		QmakeIncludes/RiverModelCommon.pri \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile RiverModelGUI.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
QmakeIncludes/SettingsOverrides.pri:
QmakeIncludes/RiverModelCommon.pri:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile RiverModelGUI.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/RiverModelGUI1.0.0 || $(MKDIR) .tmp/RiverModelGUI1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/RiverModelGUI1.0.0/ && $(COPY_FILE) --parents view/mainwindow.h view/configuration.h view/modelthread.h view/progressthread.h model/rivermodel.h model/status.h model/cleanup.h model/color.h model/dump.h model/globals.h model/go.h model/patch.h model/pred.h model/setup.h model/grid.h .tmp/RiverModelGUI1.0.0/ && $(COPY_FILE) --parents view/mainwindow.cpp view/configuration.cpp view/modelthread.cpp view/progressthread.cpp main.cpp model/rivermodel.cpp model/status.cpp model/globals.cpp model/cleanup.cpp model/color.cpp model/dump.cpp model/go.cpp model/patch.cpp model/pred.cpp model/setup.cpp .tmp/RiverModelGUI1.0.0/ && $(COPY_FILE) --parents view/mainwindow.ui .tmp/RiverModelGUI1.0.0/ && (cd `dirname .tmp/RiverModelGUI1.0.0` && $(TAR) RiverModelGUI1.0.0.tar RiverModelGUI1.0.0 && $(COMPRESS) RiverModelGUI1.0.0.tar) && $(MOVE) `dirname .tmp/RiverModelGUI1.0.0`/RiverModelGUI1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/RiverModelGUI1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_modelthread.cpp moc_progressthread.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_modelthread.cpp moc_progressthread.cpp
moc_mainwindow.cpp: ui_mainwindow.h \
		view/configuration.h \
		view/modelthread.h \
		model/rivermodel.h \
		model/status.h \
		model/globals.h \
		model/patch.h \
		model/setup.h \
		model/go.h \
		model/dump.h \
		model/pred.h \
		model/color.h \
		model/flowdata.h \
		model/grid.h \
		model/grid.cpp \
		model/cleanup.h \
		view/progressthread.h \
		view/mainwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) view/mainwindow.h -o moc_mainwindow.cpp

moc_modelthread.cpp: model/rivermodel.h \
		model/status.h \
		model/globals.h \
		model/patch.h \
		model/setup.h \
		model/go.h \
		model/dump.h \
		model/pred.h \
		model/color.h \
		model/flowdata.h \
		model/grid.h \
		model/grid.cpp \
		model/cleanup.h \
		view/modelthread.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) view/modelthread.h -o moc_modelthread.cpp

moc_progressthread.cpp: model/status.h \
		model/rivermodel.h \
		model/globals.h \
		model/patch.h \
		model/setup.h \
		model/go.h \
		model/dump.h \
		model/pred.h \
		model/color.h \
		model/flowdata.h \
		model/grid.h \
		model/grid.cpp \
		model/cleanup.h \
		view/progressthread.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) view/progressthread.h -o moc_progressthread.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h
ui_mainwindow.h: view/mainwindow.ui
	/usr/bin/uic-qt4 view/mainwindow.ui -o ui_mainwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

mainwindow.o: view/mainwindow.cpp view/mainwindow.h \
		ui_mainwindow.h \
		view/configuration.h \
		view/modelthread.h \
		model/rivermodel.h \
		model/status.h \
		model/globals.h \
		model/patch.h \
		model/setup.h \
		model/go.h \
		model/dump.h \
		model/pred.h \
		model/color.h \
		model/flowdata.h \
		model/grid.h \
		model/grid.cpp \
		model/cleanup.h \
		view/progressthread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o view/mainwindow.cpp

configuration.o: view/configuration.cpp view/configuration.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o configuration.o view/configuration.cpp

modelthread.o: view/modelthread.cpp view/modelthread.h \
		model/rivermodel.h \
		model/status.h \
		model/globals.h \
		model/patch.h \
		model/setup.h \
		model/go.h \
		model/dump.h \
		model/pred.h \
		model/color.h \
		model/flowdata.h \
		model/grid.h \
		model/grid.cpp \
		model/cleanup.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o modelthread.o view/modelthread.cpp

progressthread.o: view/progressthread.cpp view/progressthread.h \
		model/status.h \
		model/rivermodel.h \
		model/globals.h \
		model/patch.h \
		model/setup.h \
		model/go.h \
		model/dump.h \
		model/pred.h \
		model/color.h \
		model/flowdata.h \
		model/grid.h \
		model/grid.cpp \
		model/cleanup.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o progressthread.o view/progressthread.cpp

main.o: main.cpp model/rivermodel.h \
		model/status.h \
		model/globals.h \
		model/patch.h \
		model/setup.h \
		model/go.h \
		model/dump.h \
		model/pred.h \
		model/color.h \
		model/flowdata.h \
		model/grid.h \
		model/grid.cpp \
		model/cleanup.h \
		view/mainwindow.h \
		ui_mainwindow.h \
		view/configuration.h \
		view/modelthread.h \
		view/progressthread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

rivermodel.o: model/rivermodel.cpp model/rivermodel.h \
		model/status.h \
		model/globals.h \
		model/patch.h \
		model/setup.h \
		model/go.h \
		model/dump.h \
		model/pred.h \
		model/color.h \
		model/flowdata.h \
		model/grid.h \
		model/grid.cpp \
		model/cleanup.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o rivermodel.o model/rivermodel.cpp

status.o: model/status.cpp model/status.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o status.o model/status.cpp

globals.o: model/globals.cpp model/globals.h \
		model/patch.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o globals.o model/globals.cpp

cleanup.o: model/cleanup.cpp model/cleanup.h \
		model/globals.h \
		model/patch.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cleanup.o model/cleanup.cpp

color.o: model/color.cpp model/color.h \
		model/globals.h \
		model/patch.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o color.o model/color.cpp

dump.o: model/dump.cpp model/dump.h \
		model/globals.h \
		model/patch.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dump.o model/dump.cpp

go.o: model/go.cpp model/go.h \
		model/globals.h \
		model/patch.h \
		model/dump.h \
		model/pred.h \
		model/setup.h \
		model/color.h \
		model/flowdata.h \
		model/grid.h \
		model/grid.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o go.o model/go.cpp

patch.o: model/patch.cpp model/patch.h \
		model/globals.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o patch.o model/patch.cpp

pred.o: model/pred.cpp model/pred.h \
		model/globals.h \
		model/patch.h \
		model/setup.h \
		model/go.h \
		model/dump.h \
		model/color.h \
		model/flowdata.h \
		model/grid.h \
		model/grid.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pred.o model/pred.cpp

setup.o: model/setup.cpp model/setup.h \
		model/globals.h \
		model/patch.h \
		model/go.h \
		model/dump.h \
		model/pred.h \
		model/color.h \
		model/flowdata.h \
		model/grid.h \
		model/grid.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o setup.o model/setup.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_modelthread.o: moc_modelthread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_modelthread.o moc_modelthread.cpp

moc_progressthread.o: moc_progressthread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_progressthread.o moc_progressthread.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

